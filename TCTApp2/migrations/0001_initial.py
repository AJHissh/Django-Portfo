# Generated by Django 4.1.7 on 2023-06-07 02:48

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="IbanxTask9",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Individuals Name"
                    ),
                ),
                (
                    "question_4",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="No. of potential hits:"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No results", "No results"),
                            ("Match", "Match"),
                            ("No Match", "No Match"),
                            ("Potential Match", "Potential Match"),
                        ],
                        max_length=100,
                        verbose_name='Hit is "Match", "No Match", "Potential Match"',
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Comment/s (if theres an actual hit, please explain):",
                    ),
                ),
                (
                    "question_7",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Please explain the nature of Enhanced Due Diligence for this Individual Done",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_9",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask8",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Beneficial Owner", "Beneficial Owner"),
                            ("Shareholder Corporate", "Shareholder Corporate"),
                            ("Shareholder Individual", "Shareholder Individual"),
                            ("Authorised Company", "Authorised Company"),
                            ("Director Corporate", "Director Corporate"),
                            ("Director Individual", "Authorized Signatory"),
                            ("Nominee Company", " Nominee Company"),
                            ("Other Representative", "Other Representative"),
                            ("Private Trust Company", "Private Trust Company"),
                            ("Holding Company", "Holding Company"),
                            ("Public Limited Company", "Public Limited Company"),
                        ],
                        max_length=100,
                        verbose_name="Choose a position",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Please explain the nature of Enhanced Due Diligence for this Individual Done",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=200, verbose_name="Any other Comments"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_7",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask7",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Individuals Name"
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Beneficial Owner", "Beneficial Owner"),
                            ("Shareholder Corporate", "Shareholder Corporate"),
                            ("Shareholder Individual", "Shareholder Individual"),
                            ("Authorised Company", "Authorised Company"),
                            ("Director Corporate", "Director Corporate"),
                            ("Director Individual", "Authorized Signatory"),
                            ("Nominee Company", " Nominee Company"),
                            ("Other Representative", "Other Representative"),
                            ("Private Trust Company", "Private Trust Company"),
                            ("Holding Company", "Holding Company"),
                            ("Public Limited Company", "Public Limited Company"),
                        ],
                        max_length=100,
                        verbose_name="Choose a position",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Proof of Identification (POI) Provided is Valid?",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="If No, state the reason",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Proof of Address (POA) provided is valid?",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="If No, state the reason",
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Any other Comments"
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_11",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask6",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Corporation", "Corporation"),
                            (
                                "International Business Company",
                                "International Business Company",
                            ),
                            ("Global Business Company", "Global Business Company"),
                            ("Authorised Company", "Authorised Company"),
                            (
                                "Investment Holding Company",
                                "Investment Holding Company",
                            ),
                            ("Limited Liability Company", "Limited Liability Company"),
                            ("Nominee Company", " Nominee Company"),
                            ("Private Limited Company", "Private Limited Company"),
                            ("Private Trust Company", "Private Trust Company"),
                            ("Holding Company", "Holding Company"),
                            ("Public Limited Company", "Public Limited Company"),
                        ],
                        max_length=100,
                        verbose_name="Company Type",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Description of Business Activities",
                    ),
                ),
                (
                    "question_5",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Beneficial Owner? How many ?",
                    ),
                ),
                (
                    "question_6",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Shareholder Corporate? How Many?",
                    ),
                ),
                (
                    "question_7",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Shareholder Individual? How many?",
                    ),
                ),
                (
                    "question_8",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Director Corporate? How many?",
                    ),
                ),
                (
                    "question_9",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Director Individual? How many?",
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Are all information / documents provided by Customer in this step complete? (Write in comments section about findings in this review)",
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_12",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_13",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask5",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Corporation", "Corporation"),
                            (
                                "International Business Company",
                                "International Business Company",
                            ),
                            ("Global Business Company", "Global Business Company"),
                            ("Authorised Company", "Authorised Company"),
                            (
                                "Investment Holding Company",
                                "Investment Holding Company",
                            ),
                            ("Limited Liability Company", "Limited Liability Company"),
                            ("Nominee Company", " Nominee Company"),
                            ("Private Limited Company", "Private Limited Company"),
                            ("Private Trust Company", "Private Trust Company"),
                            ("Holding Company", "Holding Company"),
                            ("Public Limited Company", "Public Limited Company"),
                        ],
                        max_length=100,
                        verbose_name="Company Type",
                    ),
                ),
                (
                    "question_4",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="How many LAYERS of OWNERSHIP",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("simple", "Simple"), ("complex", "Complex")],
                        max_length=100,
                        verbose_name="COMPLEX / SIMPLE",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Does the company have Bearer Shares",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Country of Incorporation",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Industry"
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Description of Business Activities",
                    ),
                ),
                (
                    "question_10",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Beneficial Owner? How many ?",
                    ),
                ),
                (
                    "question_11",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Shareholder Corporate? How Many?",
                    ),
                ),
                (
                    "question_12",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Shareholder Individual? How many?",
                    ),
                ),
                (
                    "question_13",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Director Corporate? How many?",
                    ),
                ),
                (
                    "question_14",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Director Individual? How many?",
                    ),
                ),
                (
                    "question_15",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Are all information / documents provided by Customer in this step complete? (Write in comments section about findings in this review)",
                    ),
                ),
                (
                    "question_16",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_17",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_18",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask4",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="INITIAL overall Application SCORE",
                    ),
                ),
                (
                    "question_4",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="TOTAL NUMBER OF DOCUMENTS IN YOUR INITIAL REVIEW",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Document Submitted : KYB : Organogram Structure / Ownership Structure Chart",
                    ),
                ),
                (
                    "question_6",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="How many LAYERS of OWNERSHIP",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("simple", "Simple"), ("complex", "Complex")],
                        max_length=100,
                        verbose_name="COMPLEX / SIMPLE",
                    ),
                ),
                (
                    "question_8",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Document Submitted : Proof of Identification - How many IDs received?",
                    ),
                ),
                (
                    "question_9",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Document Submitted : Proof of Address (Utility Bills) - How many Utility Bills received?",
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Document Submitted : KYB : Certified true copy of Articles of Association / Incorporation.",
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Document Submitted : KYB : Trade Register Excerpt (Company Registration)",
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Document Submitted : KYB : Documents showing list of Directors, Managers, and Shareholders",
                    ),
                ),
                (
                    "question_13",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Documents Submitted : Business License (If Applicable)",
                    ),
                ),
                (
                    "question_14",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Documents Submitted : Proof of Operating Address (Lease Agreement, Corporate bank statement or coprorate utility bill issued within 90 days)",
                    ),
                ),
                (
                    "question_15",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Documents Submitted : UBO Declaration Form",
                    ),
                ),
                (
                    "question_16",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No"), ("n/a", "N/A")],
                        max_length=100,
                        verbose_name="Documents Submitted : Source of Funds Document for UBO",
                    ),
                ),
                (
                    "question_17",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No"), ("n/a", "N/A")],
                        max_length=100,
                        verbose_name="Documents Submitted : AML / CTF Manual (if applicable)",
                    ),
                ),
                (
                    "question_18",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No"), ("n/a", "N/A")],
                        max_length=100,
                        verbose_name="Documents Submitted : AML Questionnaire",
                    ),
                ),
                (
                    "question_19",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is the Customer a Financial Instituion / Regulated Entity?",
                    ),
                ),
                (
                    "question_20",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No"), ("n/a", "N/A")],
                        max_length=100,
                        verbose_name="Documents Submitted : Wolfsberg Questionnaire (if applicable)",
                    ),
                ),
                (
                    "question_21",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="OTHER DOCUMENTS SUBMITTED: (List the documents - separate with semi-colon [ ; ] and identify if Valid) i.e. Rental Agreement (Valid); Gaming License (Invalid)",
                    ),
                ),
                (
                    "question_22",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_23",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask3",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="EMAIL of COT User Assigned to this Application",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask20",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Merchant Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Partner Name"
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Regulated", "Regulated"),
                            ("Not Regulated", "Not Regulated"),
                        ],
                        max_length=100,
                        verbose_name="Customer AML Requirements?",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Indicate other licensing or AML Requirement",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="SIC Code (Industry Code)",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Low", "Low"),
                            ("Medium", "Medium"),
                            ("High", "High"),
                            ("Restriced", "Restricted"),
                            ("Prohibited", "Prohibited"),
                        ],
                        max_length=100,
                        verbose_name="Industry Risk",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Confirmation if intended transactions are exclusively within SEPA. If not, the % of SEPA vs SWIFT payments.",
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Pending documents to be requested: (List the documents - separate with semi-colon [ ; ]",
                    ),
                ),
                (
                    "question_10",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask2",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Number of Users you will be assigning",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Who are assigned (If multiple COT users, please seperate with a semi-colon (;))",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask19",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Merchant Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Registration number"
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Country of Incorporation (If others, please write country in comments section)",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company registry URL"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Documents need to be downloaded",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(blank=True, max_length=100, verbose_name="Price"),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask18",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Yes - Reminders only",
                                "Validation: Yes - Reminders only",
                            ),
                            ("Yes - Minor Findings", "Yes - Minor Findings"),
                            ("Yes - Major Findings", "Yes - Major Findings"),
                            ("None", "None"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="With Findings?",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="Describe the findings"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Rework", "Rework"),
                            ("For Clients Approval", "For Clients Approval"),
                            (
                                "Others please state in the next cell",
                                "Others please state in the next cell",
                            ),
                            ("None", "None"),
                            ("Others", "Others"),
                        ],
                        max_length=500,
                        verbose_name="Suggested next step for this application",
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="Other suggested steps"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask17",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Yes - Reminders only",
                                "Validation: Yes - Reminders only",
                            ),
                            ("Yes - Minor Findings", "Yes - Minor Findings"),
                            ("Yes - Major Findings", "Yes - Major Findings"),
                            ("None", "None"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="With Findings?",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Describe the findings"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Rework", "Rework"),
                            ("For Clients Approval", "For Clients Approval"),
                            (
                                "Others please state in the next cell",
                                "Others please state in the next cell",
                            ),
                            ("None", "None"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Suggested next step for this application",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask16",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Updating KYCP", "Updating KYCP"),
                            (
                                "Pre-onboarding form review",
                                "Pre-onboarding form review",
                            ),
                            (
                                "Other Task: File Admin, Data Storing, Data encoding",
                                "Other Task: File Admin, Data Storing, Data encoding",
                            ),
                            (
                                "Manual Input of Application Details into KYCP",
                                "Manual Input of Application Details into KYCP",
                            ),
                            (
                                "Updating of Status of merchant application",
                                "Updating of Status of merchant applications",
                            ),
                            (
                                "Follow up (Merchant/Client Communication)",
                                "Follow up (Merchant/Client Communication)",
                            ),
                            (
                                "Ongoing Due DIligence Review",
                                "Ongoing Due DIligence Review",
                            ),
                            (
                                "Updating of Company Structure",
                                "Updating of Company Structure",
                            ),
                            (
                                "PEPSLS number of cases like in POS UW",
                                "PEPSLS number of cases like in POS UW",
                            ),
                            ("Case monitoring", "Case monitoring"),
                            (
                                "Daily / Weekly Coordination Call",
                                "Daily / Weekly Coordination Call",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Which task is this?",
                    ),
                ),
                (
                    "question_2",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Describe the task and provide details",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task related to a merchant in review?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="If answer is Yes above, specify the Application ID, if not write N/A",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask15",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Request for more documents",
                                "Request for more documents",
                            ),
                            ("Follow up request", "Follow up request"),
                            ("For Rejection", "For Rejection"),
                            (
                                "Answering merchant inquiries",
                                "Answering merchant inquiries",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Which type of Client Communication is this?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Provide Reason / Explanation to this type of communication:",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Copy your message to Client",
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask14",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Application for Escalation",
                                "Application for Escalation",
                            ),
                            (
                                "For Approval of Application",
                                "For Approval of Application",
                            ),
                            ("For Rejection", "For Rejection"),
                            ("Question", "Question"),
                            ("Application Reassignment", "Application Reassignment"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Which type of Client Communication is this?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Provide Reason / Explanation to this type of communication:",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Copy your message to Client",
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask13",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Company", "Company"),
                            ("Beneficial Owner", "Beneficial Owner"),
                            ("Shareholder Corporate", "Shareholder Corporate"),
                            ("Shareholder Individual", "Shareholder Individual"),
                            ("Director Corporate", "Director Corporate"),
                            ("Director Individual", "Director Individual"),
                            ("Authorised Signatory", "Authorised Signatory"),
                            ("Other Related Party", "Other Related Party"),
                            ("Company in review", "Company in review"),
                        ],
                        max_length=100,
                        verbose_name="Who is being checked?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Name of the Company / Individual being checked",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Google", "Google"),
                            ("Facebook", "Facebook"),
                            ("LinkedIn", "LinkedIn"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Form of Media",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="If Others, state the form of media",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Any negative news?",
                    ),
                ),
                (
                    "question_8",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask12",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(blank=True, max_length=100, verbose_name="URL"),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Basic Website Compliance Review Done?",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Billing Descriptor",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Domain Checks / Reverse IP Searches",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Traffic Rankings",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Terms and Conditions",
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - payment page check",
                    ),
                ),
                (
                    "question_10",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask11",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(blank=True, max_length=100, verbose_name="URL"),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Company Identification and Contact Details",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Visa Mastercard Logos",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Operating / Mailing Address",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Terms and Conditions",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Refund Policy and Shipping Conditions",
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Privacy Policy",
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Pricing of Products / Services",
                    ),
                ),
                (
                    "question_11",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_13",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask10",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Individuals Name"
                    ),
                ),
                (
                    "question_4",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="No. of potential hits:"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No results", "No results"),
                            ("Match", "Match"),
                            ("No Match", "No Match"),
                            ("Potential Match", "Potential Match"),
                        ],
                        max_length=100,
                        verbose_name='Hit is "Match", "No Match", "Potential Match"',
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Comment/s (if theres an actual hit, please explain):",
                    ),
                ),
                (
                    "question_7",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Please explain the nature of Enhanced Due Diligence for this Individual Done",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_9",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IbanxTask",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                ("company", models.CharField(blank=True, max_length=100)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Create or Edit?"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="E-mail Address"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(blank=True, max_length=100, verbose_name="Role"),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Linked Program"
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comments"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask9",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Individuals Name"
                    ),
                ),
                (
                    "question_4",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="No. of potential hits:"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No results", "No results"),
                            ("Match", "Match"),
                            ("No Match", "No Match"),
                            ("Potential Match", "Potential Match"),
                        ],
                        max_length=100,
                        verbose_name='Hit is "Match", "No Match", "Potential Match"',
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Comment/s (if theres an actual hit, please explain):",
                    ),
                ),
                (
                    "question_7",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Please explain the nature of Enhanced Due Diligence for this Individual Done",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_9",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task9",
                "verbose_name_plural": "historical ibanx task9s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask8",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Beneficial Owner", "Beneficial Owner"),
                            ("Shareholder Corporate", "Shareholder Corporate"),
                            ("Shareholder Individual", "Shareholder Individual"),
                            ("Authorised Company", "Authorised Company"),
                            ("Director Corporate", "Director Corporate"),
                            ("Director Individual", "Authorized Signatory"),
                            ("Nominee Company", " Nominee Company"),
                            ("Other Representative", "Other Representative"),
                            ("Private Trust Company", "Private Trust Company"),
                            ("Holding Company", "Holding Company"),
                            ("Public Limited Company", "Public Limited Company"),
                        ],
                        max_length=100,
                        verbose_name="Choose a position",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Please explain the nature of Enhanced Due Diligence for this Individual Done",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=200, verbose_name="Any other Comments"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_7",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task8",
                "verbose_name_plural": "historical ibanx task8s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask7",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Individuals Name"
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Beneficial Owner", "Beneficial Owner"),
                            ("Shareholder Corporate", "Shareholder Corporate"),
                            ("Shareholder Individual", "Shareholder Individual"),
                            ("Authorised Company", "Authorised Company"),
                            ("Director Corporate", "Director Corporate"),
                            ("Director Individual", "Authorized Signatory"),
                            ("Nominee Company", " Nominee Company"),
                            ("Other Representative", "Other Representative"),
                            ("Private Trust Company", "Private Trust Company"),
                            ("Holding Company", "Holding Company"),
                            ("Public Limited Company", "Public Limited Company"),
                        ],
                        max_length=100,
                        verbose_name="Choose a position",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Proof of Identification (POI) Provided is Valid?",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="If No, state the reason",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Proof of Address (POA) provided is valid?",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="If No, state the reason",
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Any other Comments"
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_11",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task7",
                "verbose_name_plural": "historical ibanx task7s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask6",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Corporation", "Corporation"),
                            (
                                "International Business Company",
                                "International Business Company",
                            ),
                            ("Global Business Company", "Global Business Company"),
                            ("Authorised Company", "Authorised Company"),
                            (
                                "Investment Holding Company",
                                "Investment Holding Company",
                            ),
                            ("Limited Liability Company", "Limited Liability Company"),
                            ("Nominee Company", " Nominee Company"),
                            ("Private Limited Company", "Private Limited Company"),
                            ("Private Trust Company", "Private Trust Company"),
                            ("Holding Company", "Holding Company"),
                            ("Public Limited Company", "Public Limited Company"),
                        ],
                        max_length=100,
                        verbose_name="Company Type",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Description of Business Activities",
                    ),
                ),
                (
                    "question_5",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Beneficial Owner? How many ?",
                    ),
                ),
                (
                    "question_6",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Shareholder Corporate? How Many?",
                    ),
                ),
                (
                    "question_7",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Shareholder Individual? How many?",
                    ),
                ),
                (
                    "question_8",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Director Corporate? How many?",
                    ),
                ),
                (
                    "question_9",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Director Individual? How many?",
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Are all information / documents provided by Customer in this step complete? (Write in comments section about findings in this review)",
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_12",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_13",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task6",
                "verbose_name_plural": "historical ibanx task6s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask5",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Corporation", "Corporation"),
                            (
                                "International Business Company",
                                "International Business Company",
                            ),
                            ("Global Business Company", "Global Business Company"),
                            ("Authorised Company", "Authorised Company"),
                            (
                                "Investment Holding Company",
                                "Investment Holding Company",
                            ),
                            ("Limited Liability Company", "Limited Liability Company"),
                            ("Nominee Company", " Nominee Company"),
                            ("Private Limited Company", "Private Limited Company"),
                            ("Private Trust Company", "Private Trust Company"),
                            ("Holding Company", "Holding Company"),
                            ("Public Limited Company", "Public Limited Company"),
                        ],
                        max_length=100,
                        verbose_name="Company Type",
                    ),
                ),
                (
                    "question_4",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="How many LAYERS of OWNERSHIP",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("simple", "Simple"), ("complex", "Complex")],
                        max_length=100,
                        verbose_name="COMPLEX / SIMPLE",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Does the company have Bearer Shares",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Country of Incorporation",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Industry"
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Description of Business Activities",
                    ),
                ),
                (
                    "question_10",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Beneficial Owner? How many ?",
                    ),
                ),
                (
                    "question_11",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Shareholder Corporate? How Many?",
                    ),
                ),
                (
                    "question_12",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Shareholder Individual? How many?",
                    ),
                ),
                (
                    "question_13",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Director Corporate? How many?",
                    ),
                ),
                (
                    "question_14",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Director Individual? How many?",
                    ),
                ),
                (
                    "question_15",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Are all information / documents provided by Customer in this step complete? (Write in comments section about findings in this review)",
                    ),
                ),
                (
                    "question_16",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_17",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_18",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task5",
                "verbose_name_plural": "historical ibanx task5s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask4",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="INITIAL overall Application SCORE",
                    ),
                ),
                (
                    "question_4",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="TOTAL NUMBER OF DOCUMENTS IN YOUR INITIAL REVIEW",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Document Submitted : KYB : Organogram Structure / Ownership Structure Chart",
                    ),
                ),
                (
                    "question_6",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="How many LAYERS of OWNERSHIP",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("simple", "Simple"), ("complex", "Complex")],
                        max_length=100,
                        verbose_name="COMPLEX / SIMPLE",
                    ),
                ),
                (
                    "question_8",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Document Submitted : Proof of Identification - How many IDs received?",
                    ),
                ),
                (
                    "question_9",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Document Submitted : Proof of Address (Utility Bills) - How many Utility Bills received?",
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Document Submitted : KYB : Certified true copy of Articles of Association / Incorporation.",
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Document Submitted : KYB : Trade Register Excerpt (Company Registration)",
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Document Submitted : KYB : Documents showing list of Directors, Managers, and Shareholders",
                    ),
                ),
                (
                    "question_13",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Documents Submitted : Business License (If Applicable)",
                    ),
                ),
                (
                    "question_14",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Documents Submitted : Proof of Operating Address (Lease Agreement, Corporate bank statement or coprorate utility bill issued within 90 days)",
                    ),
                ),
                (
                    "question_15",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Documents Submitted : UBO Declaration Form",
                    ),
                ),
                (
                    "question_16",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No"), ("n/a", "N/A")],
                        max_length=100,
                        verbose_name="Documents Submitted : Source of Funds Document for UBO",
                    ),
                ),
                (
                    "question_17",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No"), ("n/a", "N/A")],
                        max_length=100,
                        verbose_name="Documents Submitted : AML / CTF Manual (if applicable)",
                    ),
                ),
                (
                    "question_18",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No"), ("n/a", "N/A")],
                        max_length=100,
                        verbose_name="Documents Submitted : AML Questionnaire",
                    ),
                ),
                (
                    "question_19",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is the Customer a Financial Instituion / Regulated Entity?",
                    ),
                ),
                (
                    "question_20",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No"), ("n/a", "N/A")],
                        max_length=100,
                        verbose_name="Documents Submitted : Wolfsberg Questionnaire (if applicable)",
                    ),
                ),
                (
                    "question_21",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="OTHER DOCUMENTS SUBMITTED: (List the documents - separate with semi-colon [ ; ] and identify if Valid) i.e. Rental Agreement (Valid); Gaming License (Invalid)",
                    ),
                ),
                (
                    "question_22",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_23",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task4",
                "verbose_name_plural": "historical ibanx task4s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask3",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="EMAIL of COT User Assigned to this Application",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task3",
                "verbose_name_plural": "historical ibanx task3s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask20",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Merchant Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Partner Name"
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Regulated", "Regulated"),
                            ("Not Regulated", "Not Regulated"),
                        ],
                        max_length=100,
                        verbose_name="Customer AML Requirements?",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Indicate other licensing or AML Requirement",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="SIC Code (Industry Code)",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Low", "Low"),
                            ("Medium", "Medium"),
                            ("High", "High"),
                            ("Restriced", "Restricted"),
                            ("Prohibited", "Prohibited"),
                        ],
                        max_length=100,
                        verbose_name="Industry Risk",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Confirmation if intended transactions are exclusively within SEPA. If not, the % of SEPA vs SWIFT payments.",
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Pending documents to be requested: (List the documents - separate with semi-colon [ ; ]",
                    ),
                ),
                (
                    "question_10",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task20",
                "verbose_name_plural": "historical ibanx task20s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask2",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Number of Users you will be assigning",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Who are assigned (If multiple COT users, please seperate with a semi-colon (;))",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task2",
                "verbose_name_plural": "historical ibanx task2s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask19",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Merchant Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Registration number"
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Country of Incorporation (If others, please write country in comments section)",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company registry URL"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Documents need to be downloaded",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(blank=True, max_length=100, verbose_name="Price"),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task19",
                "verbose_name_plural": "historical ibanx task19s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask18",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Yes - Reminders only",
                                "Validation: Yes - Reminders only",
                            ),
                            ("Yes - Minor Findings", "Yes - Minor Findings"),
                            ("Yes - Major Findings", "Yes - Major Findings"),
                            ("None", "None"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="With Findings?",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="Describe the findings"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Rework", "Rework"),
                            ("For Clients Approval", "For Clients Approval"),
                            (
                                "Others please state in the next cell",
                                "Others please state in the next cell",
                            ),
                            ("None", "None"),
                            ("Others", "Others"),
                        ],
                        max_length=500,
                        verbose_name="Suggested next step for this application",
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="Other suggested steps"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task18",
                "verbose_name_plural": "historical ibanx task18s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask17",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Yes - Reminders only",
                                "Validation: Yes - Reminders only",
                            ),
                            ("Yes - Minor Findings", "Yes - Minor Findings"),
                            ("Yes - Major Findings", "Yes - Major Findings"),
                            ("None", "None"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="With Findings?",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Describe the findings"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Rework", "Rework"),
                            ("For Clients Approval", "For Clients Approval"),
                            (
                                "Others please state in the next cell",
                                "Others please state in the next cell",
                            ),
                            ("None", "None"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Suggested next step for this application",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task17",
                "verbose_name_plural": "historical ibanx task17s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask16",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Updating KYCP", "Updating KYCP"),
                            (
                                "Pre-onboarding form review",
                                "Pre-onboarding form review",
                            ),
                            (
                                "Other Task: File Admin, Data Storing, Data encoding",
                                "Other Task: File Admin, Data Storing, Data encoding",
                            ),
                            (
                                "Manual Input of Application Details into KYCP",
                                "Manual Input of Application Details into KYCP",
                            ),
                            (
                                "Updating of Status of merchant application",
                                "Updating of Status of merchant applications",
                            ),
                            (
                                "Follow up (Merchant/Client Communication)",
                                "Follow up (Merchant/Client Communication)",
                            ),
                            (
                                "Ongoing Due DIligence Review",
                                "Ongoing Due DIligence Review",
                            ),
                            (
                                "Updating of Company Structure",
                                "Updating of Company Structure",
                            ),
                            (
                                "PEPSLS number of cases like in POS UW",
                                "PEPSLS number of cases like in POS UW",
                            ),
                            ("Case monitoring", "Case monitoring"),
                            (
                                "Daily / Weekly Coordination Call",
                                "Daily / Weekly Coordination Call",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Which task is this?",
                    ),
                ),
                (
                    "question_2",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Describe the task and provide details",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task related to a merchant in review?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="If answer is Yes above, specify the Application ID, if not write N/A",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task16",
                "verbose_name_plural": "historical ibanx task16s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask15",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Request for more documents",
                                "Request for more documents",
                            ),
                            ("Follow up request", "Follow up request"),
                            ("For Rejection", "For Rejection"),
                            (
                                "Answering merchant inquiries",
                                "Answering merchant inquiries",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Which type of Client Communication is this?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Provide Reason / Explanation to this type of communication:",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Copy your message to Client",
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task15",
                "verbose_name_plural": "historical ibanx task15s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask14",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Application for Escalation",
                                "Application for Escalation",
                            ),
                            (
                                "For Approval of Application",
                                "For Approval of Application",
                            ),
                            ("For Rejection", "For Rejection"),
                            ("Question", "Question"),
                            ("Application Reassignment", "Application Reassignment"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Which type of Client Communication is this?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Provide Reason / Explanation to this type of communication:",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Copy your message to Client",
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task14",
                "verbose_name_plural": "historical ibanx task14s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask13",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Company", "Company"),
                            ("Beneficial Owner", "Beneficial Owner"),
                            ("Shareholder Corporate", "Shareholder Corporate"),
                            ("Shareholder Individual", "Shareholder Individual"),
                            ("Director Corporate", "Director Corporate"),
                            ("Director Individual", "Director Individual"),
                            ("Authorised Signatory", "Authorised Signatory"),
                            ("Other Related Party", "Other Related Party"),
                            ("Company in review", "Company in review"),
                        ],
                        max_length=100,
                        verbose_name="Who is being checked?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Name of the Company / Individual being checked",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Google", "Google"),
                            ("Facebook", "Facebook"),
                            ("LinkedIn", "LinkedIn"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Form of Media",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="If Others, state the form of media",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Any negative news?",
                    ),
                ),
                (
                    "question_8",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task13",
                "verbose_name_plural": "historical ibanx task13s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask12",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(blank=True, max_length=100, verbose_name="URL"),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Basic Website Compliance Review Done?",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Billing Descriptor",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Domain Checks / Reverse IP Searches",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Traffic Rankings",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Terms and Conditions",
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - payment page check",
                    ),
                ),
                (
                    "question_10",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task12",
                "verbose_name_plural": "historical ibanx task12s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask11",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(blank=True, max_length=100, verbose_name="URL"),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Company Identification and Contact Details",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Visa Mastercard Logos",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Operating / Mailing Address",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Terms and Conditions",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Refund Policy and Shipping Conditions",
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Privacy Policy",
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Pricing of Products / Services",
                    ),
                ),
                (
                    "question_11",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_13",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task11",
                "verbose_name_plural": "historical ibanx task11s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask10",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Application ID"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Company Name"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Individuals Name"
                    ),
                ),
                (
                    "question_4",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="No. of potential hits:"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No results", "No results"),
                            ("Match", "Match"),
                            ("No Match", "No Match"),
                            ("Potential Match", "Potential Match"),
                        ],
                        max_length=100,
                        verbose_name='Hit is "Match", "No Match", "Potential Match"',
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Comment/s (if theres an actual hit, please explain):",
                    ),
                ),
                (
                    "question_7",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="Please explain the nature of Enhanced Due Diligence for this Individual Done",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_9",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task10",
                "verbose_name_plural": "historical ibanx task10s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIbanxTask",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Iban-X", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                ("company", models.CharField(blank=True, max_length=100)),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Create or Edit?"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="E-mail Address"
                    ),
                ),
                (
                    "question_3",
                    models.CharField(blank=True, max_length=100, verbose_name="Role"),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Linked Program"
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comments"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ibanx task",
                "verbose_name_plural": "historical ibanx tasks",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
