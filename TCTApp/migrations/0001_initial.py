# Generated by Django 4.1.7 on 2023-06-07 02:48

import TCTApp.models
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="RequestEdit",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, default="None", max_length=100),
                ),
                ("record_ID", models.CharField(default="None", max_length=255)),
                ("change", models.CharField(max_length=255)),
                ("reason", models.CharField(default="None", max_length=255)),
                ("status", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask9",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation - Request for more documents/follow-up request/answering merchant inquiries",
                                "Validation - Request for more documents/follow-up request/answering merchant inquiries",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Which type of Client-Customer Communication is this?",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Provide Reason / Explanation to this type of communication:",
                    ),
                ),
                (
                    "question_3",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Copy your message to Client",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task billable?",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask8",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation - Application for Escalation",
                                "Validation - Application for Escalation",
                            ),
                            (
                                "For Approval of Application",
                                "For Approval of Application",
                            ),
                            ("For Rejection", "For Rejection"),
                            ("Question", "Question"),
                            ("Application Reassignment", "Application Reassignment"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Which type of Client Communication is this?",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Provide Reason / Explanation to this type of communication:",
                    ),
                ),
                (
                    "question_3",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Copy your message to Client",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task billable?",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask7",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="URL"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Check - Log In Credentials Check",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Check - FOR CBD (THC Check)",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Other Checks - Please Specify (enumerate other checks and separate with semi-colon [ ; ])",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Should this be billable?",
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask6",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="URL/s - list all URLs check separated by semi-colon [ ; ]",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Company Identification (Applicant Company name or business is easily identifiable with the website).",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Contact Details",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - payment page check",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Visa Mastercard Logos",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Billing Descriptor",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Terms and Conditions",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Refund Policy and Shipping / Delivery Conditions",
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Domain Checks / Reverse IP Searches",
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Traffic Rankings",
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Privacy Policy",
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Pricing of product/service",
                    ),
                ),
                (
                    "question_13",
                    models.TextField(
                        blank=True,
                        max_length=750,
                        verbose_name="Comment/s (Please write all findings):",
                    ),
                ),
                (
                    "question_14",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask5",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Credorax / Finaro", "Credorax / Finaro"),
                            ("ECP", "ECP"),
                            ("Cashflows", "Cashflows"),
                            ("Safecharge", "Safecharge"),
                            ("Concardis", "Concardis"),
                            ("Paysafe", "Paysafe"),
                            ("Bank Frick", "Bank Frick"),
                            ("Decta", "Decta"),
                            ("Paydoo", "Paydoo"),
                            ("Ecommpay", "Ecommpay"),
                            (
                                "Secure Trading / Acquiring.com / Trust Payments",
                                "Secure Trading / Acquiring.com / Trust Payments",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Which Acquirer will this be submitted to?",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Others - Please specify",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this the first time you are submitting this merchant to an Acquirer?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="IF No, how many times did you submit this merchant to a partner including this?",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name='Did you MANUALLY fill in information in the application form? Only answer Yes - if you have filled in 60"%" and above of the fields in the application form. ',
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Estimated Number of Fields you have manually filled in in this application Form",
                    ),
                ),
                (
                    "question_7",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask4",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this your part of your FIRST REVIEW? Yes - if you are reviewing this document as part of New Assignment.",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="What is this Document?",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this valid ?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="If POA / POI - please specify the Persons name (or names seperated by Comma)",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                            (
                                "Not Applicable (Not merchant related)",
                                "Not Applicable (Not merchant related)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask3",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Payreto Application Tracking Number",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="MCC / Merchant Industry",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Country of Incorporation",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this your first review?",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Document Submitted - Accomplished Merchant Application Form",
                    ),
                ),
                (
                    "question_6",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[TCTApp.models.number_range],
                        verbose_name="Document Submitted - Proof of Identification - How many IDs reviewed?",
                    ),
                ),
                (
                    "question_7",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[TCTApp.models.number_range],
                        verbose_name="Documents Submitted - Proof of Identification - How many IDs are VALID?",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Whos IDs do they belong to/ (Seperate each FULL NAME with a semi-colon[;])",
                    ),
                ),
                (
                    "question_9",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[TCTApp.models.number_range],
                        verbose_name="Document Submitted - Proof of Address (Utility Bills) - How many Utility Bills reviewed?",
                    ),
                ),
                (
                    "question_10",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[TCTApp.models.number_range],
                        verbose_name="Document Submitted - Proof of Address (Utility Bills) - How many Utility Bills are VALID?",
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Whos POAs do these belong to?",
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            (
                                "Did not provide but downloaded from registry",
                                "Did not provide but downloaded from registry",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - KYB - Certificate of Incorporation",
                    ),
                ),
                (
                    "question_13",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            (
                                "Did not provide but downloaded from registry",
                                "Did not provide but downloaded from registry",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - KYB - Trade Register Excerpt (Company Registration)",
                    ),
                ),
                (
                    "question_14",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            (
                                "Did not provide but downloaded from registry",
                                "Did not provide but downloaded from registry",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - KYB - Documents shwing list of Directors, Managers, and Shareholders",
                    ),
                ),
                (
                    "question_15",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - Card Processing History",
                    ),
                ),
                (
                    "question_16",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                            (
                                "Documents Submitted - Business License (If Applicable)",
                                "Documents Submitted - Business License (If Applicable)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - Business License (If Applicable)",
                    ),
                ),
                (
                    "question_17",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - 6 months of corporate bank statements & a voided cheque",
                    ),
                ),
                (
                    "question_18",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - Proof of Operating Address (Lease Agreement, Corporate Bank Statement or Corporate Utility Bill issued within 90 days)",
                    ),
                ),
                (
                    "question_19",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - Proof of domaion ownership",
                    ),
                ),
                (
                    "question_20",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            (
                                "Required but did not provide",
                                "Required but did not provide",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                            ("Not Applicable", "Not Applicable"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - if PCI-DSS compliant, please submit a PCI-DSS certificate",
                    ),
                ),
                (
                    "question_21",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            (
                                "Required but did not provide",
                                "Required but did not provide",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                            ("Not Applicable", "Not Applicable"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - AML Policy/Terms and Conditions (if applicable)",
                    ),
                ),
                (
                    "question_22",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="OTHER DOCUMENTS SUBMITTED - (list the documents - separate with a semi-colon[;] and identify if VALID ie. Rental Agreement(Valid), Gaming License(Valid))",
                    ),
                ),
                (
                    "question_23",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_24",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                            ("For Follow-up", "For Follow-up"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask2",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Credorax / Finaro", "Credorax / Finaro"),
                            ("ECP", "ECP"),
                            ("Cashflows", "Cashflows"),
                            ("Safecharge", "Safecharge"),
                            ("Concardis", "Concardis"),
                            ("Paysafe", "Paysafe"),
                            ("Bank Frick", "Bank Frick"),
                            ("Decta", "Decta"),
                            ("Paydoo", "Paydoo"),
                            ("Ecommpay", "Ecommpay"),
                            (
                                "Secure Trading / Acquiring.com / Trust Payments",
                                "Secure Trading / Acquiring.com / Trust Payments",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Which Acquirer will this be submitted to?",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="If Others - Please Specify",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="MCC / Merchant Industry",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Monthly Sales Volume"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("no", "No"),
                            ("Not_Extensive", "Not Extensive (3 - 10 fields)"),
                            ("Somewhat_Extensive", "Somewhat Extensive (11-20 fields)"),
                            ("Extensive", "Extensive (More than 20 fields)"),
                        ],
                        max_length=100,
                        verbose_name="Did you manually fill in information in the acquirers portal / application form as part of this proccess? If Yes, please identify how extensive the effort was.",
                    ),
                ),
                (
                    "question_6",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[TCTApp.models.number_range],
                        verbose_name="If No, please specify how many times you have submitted this merchant for Pre-approval.",
                    ),
                ),
                (
                    "question_7",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                            (
                                "Not Applicable (Not merchant related)",
                                "Not Applicable (Not merchant related)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks/Steps",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask13",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Registration number",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Others", "Others"),
                            ("Australia", "Australia"),
                            ("Austria", "Austria"),
                            ("Belgium", "Belgium"),
                            ("Bulgaria", "Bulgaria"),
                            ("Others", "Others"),
                            ("Canada", "Canada"),
                            ("Canada (Quebec)", "Canada (Quebec)"),
                            ("Croatia", "Croatia"),
                            ("Cyprus", "Cyprus"),
                            ("Czech Republic", "Czech Republic"),
                            ("Denmark", "Denmark"),
                            ("Estonia", "Estonia"),
                            ("Finland", "Finland"),
                            ("France", "France"),
                            ("Germany", "Germany"),
                            ("Greece", "Greece"),
                            ("Gurnsey", "Gurnsey"),
                            ("Hong Kong", "Hong Kong"),
                            ("Hungary", "Hungary"),
                            ("Iceland", "Iceland"),
                            ("Ireland", "Ireland"),
                            ("Isle of Man", "Isle of Man"),
                            ("Israel", "Israel"),
                            ("Italy", "Italy"),
                            ("Jersey", "Jersey"),
                            ("Latvia", "Latvia"),
                            ("Liechtenstein", "Liechtenstein"),
                            ("Lithuania", "Lithuania"),
                            ("Luxembourg", "Luxembourg"),
                            ("Malta", "Malta"),
                            ("Netherlands", "Netherlands"),
                            ("New Zealand", "New Zealand"),
                            ("Norway", "Norway"),
                            ("Poland", "Poland"),
                            ("Portugal", "Portugal"),
                            ("Romania", "Romania"),
                            ("Serbia", "Serbia"),
                            ("Singapore", "Singapore"),
                            ("Slovakia", "Slovakia"),
                            ("Spain", "Spain"),
                            ("Sweden", "Sweden"),
                            ("Switzerland", "Switzerland"),
                            ("United Kingdom", "United Kingdom"),
                            ("Quebec", "Quebec"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Country of Incorporation (If others, please write country in comments section)",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Company registry URL",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Documents need to be downloaded",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Price"
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comments"
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask12",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Payreto Application Tracking Number",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Yes - Reminders only", "Yes - Reminders only"),
                            ("Yes - Minor Findings", "Yes - Minor Findings"),
                            ("Yes - Major Findings", "Yes - Major Findings"),
                            ("None", "None"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="With Findings?",
                    ),
                ),
                (
                    "question_3",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Describe the Findings / Comments",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation - Rework", "Validation - Rework"),
                            ("For Clients Approval", "For Clients Approval"),
                            (
                                "Others (please state in the next cell)",
                                "Others (please state in the next cell)",
                            ),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Suggested next step for this application:",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Other suggested steps",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask11",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("Updating Clients Systems", "Updating Clients Systems"),
                            (
                                "Pre-onboarding form review",
                                "Pre-onboarding form review",
                            ),
                            (
                                "Other Tasks - File Admin, Data Storing, Data Encoding",
                                "Other Tasks - File Admin, Data Storing, Data Encoding",
                            ),
                            (
                                "Manual Input of Application Details into KYCP",
                                "Manual Input of Application Details into KYCP",
                            ),
                            (
                                "Updating of Status of Merchant Application",
                                "Updating of Status of Merchant Application",
                            ),
                            (
                                "Follow-up (Merchant/Client Communication)",
                                "Follow-up (Merchant/Client Communication)",
                            ),
                            (
                                "Ongoing Due Diligence Review",
                                "Ongoing Due Diligence Review",
                            ),
                            (
                                "Updating of Company Structure",
                                "Updating of Company Structure",
                            ),
                            (
                                "PEPSLS number of cases like in POS UW",
                                "PEPSLS number of cases like in POS UW",
                            ),
                            ("Case Monitoring", "Case Monitoring"),
                            (
                                "Preparation - Daily / Weekly Coordination Call",
                                "Preparation - Daily / Weekly Coordination Call",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Which task is this?",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Describe the task and provide details",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task related to a merchant in review?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="If answer is Yes above, specify the Application ID, Merchant Name, Merchant Number",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task billable? ",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask10",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Bank Name / Partner Name",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Follow-up with Bank", "Follow-up with Bank"),
                            (
                                "Answering Bank/Partner Questions",
                                "Answering Bank/Partner Questions",
                            ),
                            (
                                "Clarifying Questions from the Bank",
                                "Clarifying Questions from the Bank",
                            ),
                            ("Calls", "Calls"),
                            (
                                "Submission for Pre-Appproval",
                                "Submission for Pre-Appproval",
                            ),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="What is this communication task?",
                    ),
                ),
                (
                    "question_3",
                    models.TextField(
                        blank=True,
                        max_length=750,
                        null=True,
                        verbose_name="Please copy paste your message to your bank / partner",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Should this be billable?",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=500, null=True, verbose_name="Comments"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task billable?",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoireTask",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Payreto Merchant Reference Number",
                    ),
                ),
                (
                    "question_2",
                    models.TextField(
                        blank=True,
                        max_length=750,
                        null=True,
                        verbose_name="Comments (If Any)",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                            (
                                "Not Applicable (Not merchant related)",
                                "Not Applicable (Not merchant related)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks/Steps",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalRequestEdit",
            fields=[
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4)),
                (
                    "name",
                    models.CharField(db_index=True, default="None", max_length=100),
                ),
                ("record_ID", models.CharField(default="None", max_length=255)),
                ("change", models.CharField(max_length=255)),
                ("reason", models.CharField(default="None", max_length=255)),
                ("status", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical request edit",
                "verbose_name_plural": "historical request edits",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask9",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation - Request for more documents/follow-up request/answering merchant inquiries",
                                "Validation - Request for more documents/follow-up request/answering merchant inquiries",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Which type of Client-Customer Communication is this?",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Provide Reason / Explanation to this type of communication:",
                    ),
                ),
                (
                    "question_3",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Copy your message to Client",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task billable?",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task9",
                "verbose_name_plural": "historical noire task9s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask8",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation - Application for Escalation",
                                "Validation - Application for Escalation",
                            ),
                            (
                                "For Approval of Application",
                                "For Approval of Application",
                            ),
                            ("For Rejection", "For Rejection"),
                            ("Question", "Question"),
                            ("Application Reassignment", "Application Reassignment"),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Which type of Client Communication is this?",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Provide Reason / Explanation to this type of communication:",
                    ),
                ),
                (
                    "question_3",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Copy your message to Client",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task billable?",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task8",
                "verbose_name_plural": "historical noire task8s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask7",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="URL"
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Check - Log In Credentials Check",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Check - FOR CBD (THC Check)",
                    ),
                ),
                (
                    "question_4",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Other Checks - Please Specify (enumerate other checks and separate with semi-colon [ ; ])",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Should this be billable?",
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task7",
                "verbose_name_plural": "historical noire task7s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask6",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        verbose_name="URL/s - list all URLs check separated by semi-colon [ ; ]",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Company Identification (Applicant Company name or business is easily identifiable with the website).",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Contact Details",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - payment page check",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Visa Mastercard Logos",
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Billing Descriptor",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Terms and Conditions",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Refund Policy and Shipping / Delivery Conditions",
                    ),
                ),
                (
                    "question_9",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Domain Checks / Reverse IP Searches",
                    ),
                ),
                (
                    "question_10",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Traffic Rankings",
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Privacy Policy",
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("No Issue (Checked)", "No Issue (Checked)"),
                            ("With Issue (Checked)", "With Issue (Checked)"),
                            (
                                "Not checked (not required)",
                                "Not checked (not required)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Check - Pricing of product/service",
                    ),
                ),
                (
                    "question_13",
                    models.TextField(
                        blank=True,
                        max_length=750,
                        verbose_name="Comment/s (Please write all findings):",
                    ),
                ),
                (
                    "question_14",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task6",
                "verbose_name_plural": "historical noire task6s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask5",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Credorax / Finaro", "Credorax / Finaro"),
                            ("ECP", "ECP"),
                            ("Cashflows", "Cashflows"),
                            ("Safecharge", "Safecharge"),
                            ("Concardis", "Concardis"),
                            ("Paysafe", "Paysafe"),
                            ("Bank Frick", "Bank Frick"),
                            ("Decta", "Decta"),
                            ("Paydoo", "Paydoo"),
                            ("Ecommpay", "Ecommpay"),
                            (
                                "Secure Trading / Acquiring.com / Trust Payments",
                                "Secure Trading / Acquiring.com / Trust Payments",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Which Acquirer will this be submitted to?",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Others - Please specify",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this the first time you are submitting this merchant to an Acquirer?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="IF No, how many times did you submit this merchant to a partner including this?",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name='Did you MANUALLY fill in information in the application form? Only answer Yes - if you have filled in 60"%" and above of the fields in the application form. ',
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Estimated Number of Fields you have manually filled in in this application Form",
                    ),
                ),
                (
                    "question_7",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task5",
                "verbose_name_plural": "historical noire task5s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask4",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this your part of your FIRST REVIEW? Yes - if you are reviewing this document as part of New Assignment.",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="What is this Document?",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this valid ?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="If POA / POI - please specify the Persons name (or names seperated by Comma)",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                            (
                                "Not Applicable (Not merchant related)",
                                "Not Applicable (Not merchant related)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task4",
                "verbose_name_plural": "historical noire task4s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask3",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Payreto Application Tracking Number",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="MCC / Merchant Industry",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Country of Incorporation",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        verbose_name="Is this your first review?",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Document Submitted - Accomplished Merchant Application Form",
                    ),
                ),
                (
                    "question_6",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[TCTApp.models.number_range],
                        verbose_name="Document Submitted - Proof of Identification - How many IDs reviewed?",
                    ),
                ),
                (
                    "question_7",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[TCTApp.models.number_range],
                        verbose_name="Documents Submitted - Proof of Identification - How many IDs are VALID?",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Whos IDs do they belong to/ (Seperate each FULL NAME with a semi-colon[;])",
                    ),
                ),
                (
                    "question_9",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[TCTApp.models.number_range],
                        verbose_name="Document Submitted - Proof of Address (Utility Bills) - How many Utility Bills reviewed?",
                    ),
                ),
                (
                    "question_10",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[TCTApp.models.number_range],
                        verbose_name="Document Submitted - Proof of Address (Utility Bills) - How many Utility Bills are VALID?",
                    ),
                ),
                (
                    "question_11",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Whos POAs do these belong to?",
                    ),
                ),
                (
                    "question_12",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            (
                                "Did not provide but downloaded from registry",
                                "Did not provide but downloaded from registry",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - KYB - Certificate of Incorporation",
                    ),
                ),
                (
                    "question_13",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            (
                                "Did not provide but downloaded from registry",
                                "Did not provide but downloaded from registry",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - KYB - Trade Register Excerpt (Company Registration)",
                    ),
                ),
                (
                    "question_14",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            (
                                "Did not provide but downloaded from registry",
                                "Did not provide but downloaded from registry",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - KYB - Documents shwing list of Directors, Managers, and Shareholders",
                    ),
                ),
                (
                    "question_15",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - Card Processing History",
                    ),
                ),
                (
                    "question_16",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                            (
                                "Documents Submitted - Business License (If Applicable)",
                                "Documents Submitted - Business License (If Applicable)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - Business License (If Applicable)",
                    ),
                ),
                (
                    "question_17",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - 6 months of corporate bank statements & a voided cheque",
                    ),
                ),
                (
                    "question_18",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - Proof of Operating Address (Lease Agreement, Corporate Bank Statement or Corporate Utility Bill issued within 90 days)",
                    ),
                ),
                (
                    "question_19",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - Proof of domaion ownership",
                    ),
                ),
                (
                    "question_20",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            (
                                "Required but did not provide",
                                "Required but did not provide",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                            ("Not Applicable", "Not Applicable"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - if PCI-DSS compliant, please submit a PCI-DSS certificate",
                    ),
                ),
                (
                    "question_21",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Provided - Complete and Valid",
                                "Provided - Complete and Valid",
                            ),
                            (
                                "Provided - Incomplete / Invalid",
                                "Provided - Incomplete / Invalid",
                            ),
                            (
                                "Required but did not provide",
                                "Required but did not provide",
                            ),
                            ("Did Not Provide", "Did Not Provide"),
                            ("Not Applicable", "Not Applicable"),
                        ],
                        max_length=100,
                        verbose_name="Documents Submitted - AML Policy/Terms and Conditions (if applicable)",
                    ),
                ),
                (
                    "question_22",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="OTHER DOCUMENTS SUBMITTED - (list the documents - separate with a semi-colon[;] and identify if VALID ie. Rental Agreement(Valid), Gaming License(Valid))",
                    ),
                ),
                (
                    "question_23",
                    models.TextField(
                        blank=True, max_length=750, verbose_name="Comments"
                    ),
                ),
                (
                    "question_24",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                            ("For Follow-up", "For Follow-up"),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks / Steps",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task3",
                "verbose_name_plural": "historical noire task3s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask2",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Credorax / Finaro", "Credorax / Finaro"),
                            ("ECP", "ECP"),
                            ("Cashflows", "Cashflows"),
                            ("Safecharge", "Safecharge"),
                            ("Concardis", "Concardis"),
                            ("Paysafe", "Paysafe"),
                            ("Bank Frick", "Bank Frick"),
                            ("Decta", "Decta"),
                            ("Paydoo", "Paydoo"),
                            ("Ecommpay", "Ecommpay"),
                            (
                                "Secure Trading / Acquiring.com / Trust Payments",
                                "Secure Trading / Acquiring.com / Trust Payments",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        verbose_name="Which Acquirer will this be submitted to?",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="If Others - Please Specify",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="MCC / Merchant Industry",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Monthly Sales Volume"
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("no", "No"),
                            ("Not_Extensive", "Not Extensive (3 - 10 fields)"),
                            ("Somewhat_Extensive", "Somewhat Extensive (11-20 fields)"),
                            ("Extensive", "Extensive (More than 20 fields)"),
                        ],
                        max_length=100,
                        verbose_name="Did you manually fill in information in the acquirers portal / application form as part of this proccess? If Yes, please identify how extensive the effort was.",
                    ),
                ),
                (
                    "question_6",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[TCTApp.models.number_range],
                        verbose_name="If No, please specify how many times you have submitted this merchant for Pre-approval.",
                    ),
                ),
                (
                    "question_7",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                            (
                                "Not Applicable (Not merchant related)",
                                "Not Applicable (Not merchant related)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks/Steps",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task2",
                "verbose_name_plural": "historical noire task2s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask13",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Registration number",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Others", "Others"),
                            ("Australia", "Australia"),
                            ("Austria", "Austria"),
                            ("Belgium", "Belgium"),
                            ("Bulgaria", "Bulgaria"),
                            ("Others", "Others"),
                            ("Canada", "Canada"),
                            ("Canada (Quebec)", "Canada (Quebec)"),
                            ("Croatia", "Croatia"),
                            ("Cyprus", "Cyprus"),
                            ("Czech Republic", "Czech Republic"),
                            ("Denmark", "Denmark"),
                            ("Estonia", "Estonia"),
                            ("Finland", "Finland"),
                            ("France", "France"),
                            ("Germany", "Germany"),
                            ("Greece", "Greece"),
                            ("Gurnsey", "Gurnsey"),
                            ("Hong Kong", "Hong Kong"),
                            ("Hungary", "Hungary"),
                            ("Iceland", "Iceland"),
                            ("Ireland", "Ireland"),
                            ("Isle of Man", "Isle of Man"),
                            ("Israel", "Israel"),
                            ("Italy", "Italy"),
                            ("Jersey", "Jersey"),
                            ("Latvia", "Latvia"),
                            ("Liechtenstein", "Liechtenstein"),
                            ("Lithuania", "Lithuania"),
                            ("Luxembourg", "Luxembourg"),
                            ("Malta", "Malta"),
                            ("Netherlands", "Netherlands"),
                            ("New Zealand", "New Zealand"),
                            ("Norway", "Norway"),
                            ("Poland", "Poland"),
                            ("Portugal", "Portugal"),
                            ("Romania", "Romania"),
                            ("Serbia", "Serbia"),
                            ("Singapore", "Singapore"),
                            ("Slovakia", "Slovakia"),
                            ("Spain", "Spain"),
                            ("Sweden", "Sweden"),
                            ("Switzerland", "Switzerland"),
                            ("United Kingdom", "United Kingdom"),
                            ("Quebec", "Quebec"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Country of Incorporation (If others, please write country in comments section)",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Company registry URL",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Documents need to be downloaded",
                    ),
                ),
                (
                    "question_5",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Price"
                    ),
                ),
                (
                    "question_6",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comments"
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task13",
                "verbose_name_plural": "historical noire task13s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask12",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Payreto Application Tracking Number",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Yes - Reminders only", "Yes - Reminders only"),
                            ("Yes - Minor Findings", "Yes - Minor Findings"),
                            ("Yes - Major Findings", "Yes - Major Findings"),
                            ("None", "None"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="With Findings?",
                    ),
                ),
                (
                    "question_3",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Describe the Findings / Comments",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation - Rework", "Validation - Rework"),
                            ("For Clients Approval", "For Clients Approval"),
                            (
                                "Others (please state in the next cell)",
                                "Others (please state in the next cell)",
                            ),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Suggested next step for this application:",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Other suggested steps",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task12",
                "verbose_name_plural": "historical noire task12s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask11",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Validation", "Validation"),
                            ("Updating Clients Systems", "Updating Clients Systems"),
                            (
                                "Pre-onboarding form review",
                                "Pre-onboarding form review",
                            ),
                            (
                                "Other Tasks - File Admin, Data Storing, Data Encoding",
                                "Other Tasks - File Admin, Data Storing, Data Encoding",
                            ),
                            (
                                "Manual Input of Application Details into KYCP",
                                "Manual Input of Application Details into KYCP",
                            ),
                            (
                                "Updating of Status of Merchant Application",
                                "Updating of Status of Merchant Application",
                            ),
                            (
                                "Follow-up (Merchant/Client Communication)",
                                "Follow-up (Merchant/Client Communication)",
                            ),
                            (
                                "Ongoing Due Diligence Review",
                                "Ongoing Due Diligence Review",
                            ),
                            (
                                "Updating of Company Structure",
                                "Updating of Company Structure",
                            ),
                            (
                                "PEPSLS number of cases like in POS UW",
                                "PEPSLS number of cases like in POS UW",
                            ),
                            ("Case Monitoring", "Case Monitoring"),
                            (
                                "Preparation - Daily / Weekly Coordination Call",
                                "Preparation - Daily / Weekly Coordination Call",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Which task is this?",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Describe the task and provide details",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task related to a merchant in review?",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="If answer is Yes above, specify the Application ID, Merchant Name, Merchant Number",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=750, null=True, verbose_name="Comment/s:"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task part of your FIRST TOUCH POINT / FIRST or INITIAL REVIEW with this Application (Your first time reviewing this case)?",
                    ),
                ),
                (
                    "question_7",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task billable? ",
                    ),
                ),
                (
                    "question_8",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="Next Tasks / Steps:",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task11",
                "verbose_name_plural": "historical noire task11s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask10",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Bank Name / Partner Name",
                    ),
                ),
                (
                    "question_2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Follow-up with Bank", "Follow-up with Bank"),
                            (
                                "Answering Bank/Partner Questions",
                                "Answering Bank/Partner Questions",
                            ),
                            (
                                "Clarifying Questions from the Bank",
                                "Clarifying Questions from the Bank",
                            ),
                            ("Calls", "Calls"),
                            (
                                "Submission for Pre-Appproval",
                                "Submission for Pre-Appproval",
                            ),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="What is this communication task?",
                    ),
                ),
                (
                    "question_3",
                    models.TextField(
                        blank=True,
                        max_length=750,
                        null=True,
                        verbose_name="Please copy paste your message to your bank / partner",
                    ),
                ),
                (
                    "question_4",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Should this be billable?",
                    ),
                ),
                (
                    "question_5",
                    models.TextField(
                        blank=True, max_length=500, null=True, verbose_name="Comments"
                    ),
                ),
                (
                    "question_6",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=100,
                        null=True,
                        verbose_name="Is this task billable?",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task10",
                "verbose_name_plural": "historical noire task10s",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNoireTask",
            fields=[
                ("name", models.CharField(db_index=True, max_length=100)),
                ("date_opened", models.DateTimeField(db_index=True, null=True)),
                ("date_submitted", models.DateTimeField(db_index=True, null=True)),
                ("elapsed_time", models.DurationField(default=datetime.timedelta(0))),
                (
                    "date_today",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "month_submit",
                    models.CharField(default="None", max_length=100, null=True),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "client",
                    models.CharField(db_index=True, default="Noire", max_length=100),
                ),
                ("task_segment", models.CharField(default="None", max_length=100)),
                ("task_company", models.CharField(max_length=100)),
                ("is_completed", models.BooleanField(db_index=True, default=False)),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Company name (Applicant Company - Registered Name)",
                    ),
                ),
                (
                    "question_1",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Payreto Merchant Reference Number",
                    ),
                ),
                (
                    "question_2",
                    models.TextField(
                        blank=True,
                        max_length=750,
                        null=True,
                        verbose_name="Comments (If Any)",
                    ),
                ),
                (
                    "question_3",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Validation: Continue Review (of Tasks)",
                                "Validation: Continue Review (of Tasks)",
                            ),
                            ("Escalate to Client", "Escalate to Client"),
                            (
                                "Communicate findings to Merchant / Pend - Internal Review",
                                "Communicate findings to Merchant / Pend - Internal Review",
                            ),
                            ("Pend - Internal Review", "Pend - Internal Review"),
                            ("For Payreto Quality Check", "For Payreto Quality Check"),
                            ("For Client Quality Checking", "Escalate to Client"),
                            ("For Approval", "For Approval"),
                            ("For Rejection/Pend", "For Rejection/Pend"),
                            (
                                "Not Applicable (Not merchant related)",
                                "Not Applicable (Not merchant related)",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Next Tasks/Steps",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        to_field="uuid",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical noire task",
                "verbose_name_plural": "historical noire tasks",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
